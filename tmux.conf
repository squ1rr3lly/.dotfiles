# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Set default shell to zsh with Colors
set-option -g default-shell /bin/zsh
set -g default-terminal screen-256color

# Start index at 1 (0 is weird key placement)
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# History - number of lines saved per tmux pane
set -g history-limit 10000

# Status Bar
set-option -g status on
set -g status-bg black
set -g status-fg white
set -g status-interval 60 # Sec between update
set -g status-justify centre
set -g status-left-length 45
set -g status-left "#[fg=green](#S) #(whoami)@#H"
#set -g status-right "#[fg=colour198]: #h : #[fg=brightblue]#(curl icanhazip.com) #(ifconfig eth0 | grep 'inet ' | awk '{print \"eth0 \" $2}') #(ifconfig eth1 | grep 'inet ' | awk '{print \"eth1 \" $2}') #(ifconfig eth3 | grep 'inet ' | awk '{print \"eth3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
set -g status-right "#[fg=colour198]: #(curl icanhazip.com ) : #[fg=brightblue]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2 \" : \"}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"
#set -g status-right "#[fg=yellow]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]"
#set -g status-right "#[fg=yellow]#(ip add show dev eth0 | cut -d' ' -f6 | cut -d$'\n' -f3)#[default] #[fg=white]%H:%M#[default]"
#set -g status-right "#[fg=yellow]#(ifconfig eth0 | cut -d$'\n' -f2 | cut -d$' ' -f10)#[default] #[fg=white]%H:%M#[default]"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
#
# Not compatible with iTerm2
#
setw -g aggressive-resize off

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

bind C-q command-prompt -I "htop" -p "Quick window command: " "new-window '%%'"

#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection
bind C-c run "tmux save-buffer - | pbcopy"
bind C-v run "tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer"

bind C-s choose-session

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Highlight active window
# set-window-option -g window-status-current-bg red

# Enable Scrolling, user Shft+click to select text, q to return
######
# Usage Notes:
### Copy/Paste ###
# - Inside tmux, copy by hightlighting in yellow, paste with prefix+]
# - To copy into clipboard, Shift-Select text, Shift+Ctrl+c to copy
#   - If using multiple panes, zoom with prefix+z
# - Double-click to get system menu
#
#
set -g mouse on 


# Vim
set -g status-keys vi
setw -g mode-keys vi

# More sensible pane split keys
bind-key - split-window -v
bind-key | split-window -h

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Bind a source-file reload
bind r source-file ~/.tmux.conf \; display-message "  Config reloaded.."

# ZSH has a precmd() built-in that will run before every command
# precmd () {
#    tmux set -qg status-left "#S #P $(pwd)"
#}
